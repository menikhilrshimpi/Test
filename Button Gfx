// Button position and size
double x = 20; 
double y = 20; 
double width = 150; 
double height = 35; // Reduced height for single line

XRect xRect = new XRect(x, y, x + width, y + height);
PdfRectangle pdfRectangle = new PdfRectangle(xRect);

var link = new PdfLinkAnnotation()
{
    Color = XColors.Transparent
};
link.Rectangle = pdfRectangle;
link.Title = "Review & Pay Button";

PdfDictionary uriAction = new PdfDictionary();
uriAction.Elements["/S"] = new PdfName("/URI");
uriAction.Elements["/URI"] = new PdfString(insuredInvitationToken);
link.Elements["/A"] = uriAction;

foreach (PdfPage page in coverSheetDoc.Pages)
{
    page.Annotations.Add(link);
    
    using (var gfx = XGraphics.FromPdfPage(page))
    {
        double drawY = page_Height - y - height;
        double borderThickness = 1.5;
        XColor baseColor = XColors.DarkBlue;
        
        // Calculate highlight and shadow colors
        XColor highlightColor = XColors.LightSkyBlue;
        XColor shadowColor = XColors.Navy;
        
        // Draw main button body with gradient for 3D effect
        var gradient = new XLinearGradientBrush(
            new XPoint(x, drawY),
            new XPoint(x, drawY + height),
            highlightColor,
            shadowColor
        );
        gfx.DrawRectangle(gradient, new XRect(x, drawY, width, height));
        
        // Draw 3D beveled borders
        // Top and left highlights
        gfx.DrawLine(new XPen(highlightColor, borderThickness),
            x, drawY,
            x + width, drawY); // Top edge
            
        gfx.DrawLine(new XPen(highlightColor, borderThickness),
            x, drawY,
            x, drawY + height); // Left edge
            
        // Bottom and right shadows
        gfx.DrawLine(new XPen(shadowColor, borderThickness),
            x, drawY + height,
            x + width, drawY + height); // Bottom edge
            
        gfx.DrawLine(new XPen(shadowColor, borderThickness),
            x + width, drawY,
            x + width, drawY + height); // Right edge

        // Draw centered text with depth effect
        var font = new XFont("Arial", 14, XFontStyleEx.Bold);
        
        // Text shadow (gives depth)
        gfx.DrawString("Review & Pay Now", font, XBrushes.Black,
            new XRect(x + 1, drawY + 1, width, height),
            XStringFormats.Center);
        
        // Main text
        gfx.DrawString("Review & Pay Now", font, XBrushes.White,
            new XRect(x, drawY, width, height),
            XStringFormats.Center);
    }
}
